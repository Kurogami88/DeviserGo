package main

var apiLogout = `
/***
	Author: Leong Kai Khee (Kurogami)
	Date: 2020

	Generated by DeviserGO
***/

package main

import (
	"net/http"

	"github.com/dgrijalva/jwt-go"
)

//Logout is an API to invalidate an existing token
func Logout(w http.ResponseWriter, r *http.Request) {
	result := DeviserResponse{HTTPStatus: 200, Result: "Successfully logged out"}

	ctx := r.Context().Value("Authorization")
	token, ok := ctx.(*jwt.Token)
	if ok {
		claims, ok := token.Claims.(jwt.MapClaims)
		if ok {
			uuid, _ := claims["jti"].(string)
			username, _ := claims["username"].(string)
			role, _ := claims["role"].(string)

			dbToken := Token{
				Uuid:     &uuid,
				Username: &username,
				Role:     &role,
			}
			_, err := DBTokenDeleteUnscope(dbToken)
			if err != nil {
				result = DeviserResponse{HTTPStatus: 400, Result: "Error logging out"}
			}
		} else {
			LogError("[auth.go] Error casting jwt.MapClaims")
			result = DeviserResponse{HTTPStatus: 400, Result: "Error logging out"}
		}
	} else {
		LogError("[auth.go] Error casting jwt.Token")
		result = DeviserResponse{HTTPStatus: 400, Result: "Error logging out"}
	}

	result.DoResponse(w)
	return
}
`
